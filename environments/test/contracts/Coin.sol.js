// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"newSellPrice","type":"uint256"},{"name":"newBuyPrice","type":"uint256"}],"name":"setPrices","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"sellPrice","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"target","type":"address"},{"name":"mintedAmount","type":"uint256"}],"name":"mintToken","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"buyPrice","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"buy","outputs":[{"name":"amount","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"frozenAccount","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"sell","outputs":[{"name":"revenue","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"target","type":"address"},{"name":"freeze","type":"bool"}],"name":"freezeAccount","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"initialSupply","type":"uint256"},{"name":"tokenName","type":"string"},{"name":"decimalUnits","type":"uint8"},{"name":"tokenSymbol","type":"string"},{"name":"centralMinter","type":"address"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"TransferTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"msgValue_finney","type":"uint256"},{"indexed":false,"name":"buyPrice_finney","type":"uint256"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"BuyTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"rev_finney","type":"uint256"},{"indexed":false,"name":"sellPrice_finney","type":"uint256"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"SellTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"addr","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"GetBalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"target","type":"address"},{"indexed":false,"name":"frozen","type":"bool"}],"name":"FrozenFunds","type":"event"}],
    binary: "606060405266038d7ea4c680006008600050556040516109dd3803806109dd83398101604052805160805160a05160c05160e0519394928301939192019060008054600160a060020a03191633179055600160a060020a0381166000146100735760008054600160a060020a031916821790555b6001858155600160a060020a03331660009081526002602081815260408320899055600380548951948290529094601f9082161561010002600019019091169290920482018190047fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9081019392909189019083901061014757805160ff19168380011785555b506101779291505b808211156101d05760008155600101610102565b50506005805460ff191684179055662386f26fc10000600681905560075550505050506107d9806102046000396000f35b828001600101855582156100fa579182015b828111156100fa578251826000505591602001919060010190610159565b50508160046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101d457805160ff19168380011785555b50610116929150610102565b5090565b828001600101855582156101c4579182015b828111156101c45782518260005055916020019190600101906101e656606060405236156100cf5760e060020a600035046305fefda781146100d157806306fdde03146100f557806318160ddd14610152578063313ce5671461015b5780634b7503341461016757806370a082311461017057806379c65068146101885780638620410b146101ac5780638da5cb5b146101b557806395d89b41146101c7578063a6f2ae3a14610223578063a9059cbb14610253578063b414d4b614610283578063e4849b321461029e578063e724529c146102ca578063f2fde38b146102ee578063f8b2cb4f1461030f575b005b6100cf60043560243560005433600160a060020a0390811691161461041d57610002565b61038760038054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104535780601f1061042857610100808354040283529160200191610453565b6103f560015481565b61040760055460ff1681565b6103f560065481565b6103f560043560026020526000908152604090205481565b6100cf60043560243560005433600160a060020a0390811691161461045b57610002565b6103f560075481565b610407600054600160a060020a031681565b610387600480546020601f600260001960018516156101000201909316929092049182018190040260809081016040526060828152929190828280156104535780601f1061042857610100808354040283529160200191610453565b60075430600160a060020a03166000908152600260205260409020546103f5913404908190101561052a57610002565b6100cf60043560243532600160a060020a03811660009081526009602052604090205460ff161561059757610002565b61041160043560096020526000908152604090205460ff1681565b6103f560043533600160a060020a03166000908152600260205260408120548290101561068a57610002565b6100cf60043560243560005433600160a060020a0390811691161461076157610002565b6100cf60043560005433600160a060020a039081169116146107b757610002565b6103f5600435600160a060020a038116600081815260026020908152604082205460609081529192917f2ee5108edf1b0cacb02ca5dd70ace75f5f6acba366cfe64a64b126815c5473a99190a26002600050600083600160a060020a031681526020019081526020016000206000505490505b919050565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b6060908152602090f35b15156060908152602090f35b600691909155600755565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b505050505081565b600160a060020a03808316600090815260026020526040812080548401905560018054840190558054606091825290911660805260a08290527f58908a0fd75f7db2ca358a37b3076327d374ee1403d013a2efbc255535501edf9080a17f58908a0fd75f7db2ca358a37b3076327d374ee1403d013a2efbc255535501edf600060009054906101000a9004600160a060020a031683836040518084600160a060020a0316815260200183600160a060020a03168152602001828152602001935050505060405180910390a15050565b6040600081812033600160a060020a039081168084529383208054860190553016918290528054849003905560085460075434829004606090815291900460805260a08490527f50b6aaf116de9bdc1a9ed630e1ccfc0ba2a9fc8f40413653c72dac40c5828b959080a390565b6002602052604060002054829010806105c45750600160a060020a03831660009081526040902054808301105b156105ce57610002565b816002600050600083600160a060020a03168152602001908152602001600020600082828250540392505081905550816002600050600085600160a060020a031681526020019081526020016000206000828282505401925050819055507f58908a0fd75f7db2ca358a37b3076327d374ee1403d013a2efbc255535501edf8184846040518084600160a060020a0316815260200183600160a060020a03168152602001828152602001935050505060405180910390a1505050565b604080822030600160a060020a03908116845291832080548501905533909116808352815484900390915560065483029182606082818181858883f19350505050151561070157816002600050600033600160a060020a031681526020019081526020016000206000828282505401925050819055505b6008546006546040805183850481529290910460208301528181018490525133600160a060020a039081169230909116917f548d9f3da692e92a59f1014c9cf16821d2e2bb0638285c31bfd81778aa8a6c2d9181900360600190a3610382565b600160a060020a03821660008181526009602052604090819020805460ff19168417905560609182528215156080527f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a591a15050565b6000805473ffffffffffffffffffffffffffffffffffffffff1916821790555056",
    unlinked_binary: "606060405266038d7ea4c680006008600050556040516109dd3803806109dd83398101604052805160805160a05160c05160e0519394928301939192019060008054600160a060020a03191633179055600160a060020a0381166000146100735760008054600160a060020a031916821790555b6001858155600160a060020a03331660009081526002602081815260408320899055600380548951948290529094601f9082161561010002600019019091169290920482018190047fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9081019392909189019083901061014757805160ff19168380011785555b506101779291505b808211156101d05760008155600101610102565b50506005805460ff191684179055662386f26fc10000600681905560075550505050506107d9806102046000396000f35b828001600101855582156100fa579182015b828111156100fa578251826000505591602001919060010190610159565b50508160046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101d457805160ff19168380011785555b50610116929150610102565b5090565b828001600101855582156101c4579182015b828111156101c45782518260005055916020019190600101906101e656606060405236156100cf5760e060020a600035046305fefda781146100d157806306fdde03146100f557806318160ddd14610152578063313ce5671461015b5780634b7503341461016757806370a082311461017057806379c65068146101885780638620410b146101ac5780638da5cb5b146101b557806395d89b41146101c7578063a6f2ae3a14610223578063a9059cbb14610253578063b414d4b614610283578063e4849b321461029e578063e724529c146102ca578063f2fde38b146102ee578063f8b2cb4f1461030f575b005b6100cf60043560243560005433600160a060020a0390811691161461041d57610002565b61038760038054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104535780601f1061042857610100808354040283529160200191610453565b6103f560015481565b61040760055460ff1681565b6103f560065481565b6103f560043560026020526000908152604090205481565b6100cf60043560243560005433600160a060020a0390811691161461045b57610002565b6103f560075481565b610407600054600160a060020a031681565b610387600480546020601f600260001960018516156101000201909316929092049182018190040260809081016040526060828152929190828280156104535780601f1061042857610100808354040283529160200191610453565b60075430600160a060020a03166000908152600260205260409020546103f5913404908190101561052a57610002565b6100cf60043560243532600160a060020a03811660009081526009602052604090205460ff161561059757610002565b61041160043560096020526000908152604090205460ff1681565b6103f560043533600160a060020a03166000908152600260205260408120548290101561068a57610002565b6100cf60043560243560005433600160a060020a0390811691161461076157610002565b6100cf60043560005433600160a060020a039081169116146107b757610002565b6103f5600435600160a060020a038116600081815260026020908152604082205460609081529192917f2ee5108edf1b0cacb02ca5dd70ace75f5f6acba366cfe64a64b126815c5473a99190a26002600050600083600160a060020a031681526020019081526020016000206000505490505b919050565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b6060908152602090f35b15156060908152602090f35b600691909155600755565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b505050505081565b600160a060020a03808316600090815260026020526040812080548401905560018054840190558054606091825290911660805260a08290527f58908a0fd75f7db2ca358a37b3076327d374ee1403d013a2efbc255535501edf9080a17f58908a0fd75f7db2ca358a37b3076327d374ee1403d013a2efbc255535501edf600060009054906101000a9004600160a060020a031683836040518084600160a060020a0316815260200183600160a060020a03168152602001828152602001935050505060405180910390a15050565b6040600081812033600160a060020a039081168084529383208054860190553016918290528054849003905560085460075434829004606090815291900460805260a08490527f50b6aaf116de9bdc1a9ed630e1ccfc0ba2a9fc8f40413653c72dac40c5828b959080a390565b6002602052604060002054829010806105c45750600160a060020a03831660009081526040902054808301105b156105ce57610002565b816002600050600083600160a060020a03168152602001908152602001600020600082828250540392505081905550816002600050600085600160a060020a031681526020019081526020016000206000828282505401925050819055507f58908a0fd75f7db2ca358a37b3076327d374ee1403d013a2efbc255535501edf8184846040518084600160a060020a0316815260200183600160a060020a03168152602001828152602001935050505060405180910390a1505050565b604080822030600160a060020a03908116845291832080548501905533909116808352815484900390915560065483029182606082818181858883f19350505050151561070157816002600050600033600160a060020a031681526020019081526020016000206000828282505401925050819055505b6008546006546040805183850481529290910460208301528181018490525133600160a060020a039081169230909116917f548d9f3da692e92a59f1014c9cf16821d2e2bb0638285c31bfd81778aa8a6c2d9181900360600190a3610382565b600160a060020a03821660008181526009602052604090819020805460ff19168417905560609182528215156080527f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a591a15050565b6000805473ffffffffffffffffffffffffffffffffffffffff1916821790555056",
    address: "0x386dc8f4249e48c136c9c8c1991bd1e6119632a8",
    generated_with: "2.0.9",
    contract_name: "Coin"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Coin error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Coin error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Coin error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Coin error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Coin = Contract;
  }

})();
