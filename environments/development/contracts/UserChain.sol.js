// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"getBalance","outputs":[{"name":"balance","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"registrantsPaid","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"new_owner","type":"address"}],"name":"setOwner","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getValue","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"dl","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"value","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"buyTick","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"location","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"new_value","type":"uint256"}],"name":"setValue","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"amount","type":"uint256"}],"name":"refundTicket","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"owner_address","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"loc_address","type":"string"}],"name":"setLocation","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"dl_address","type":"address"}],"name":"setDL","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getSSN","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"newquota","type":"uint256"}],"name":"changeQuota","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"balance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"location","type":"string"}],"name":"setSSN","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getDL","outputs":[{"name":"dl","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"getLocation","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"quota","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"ssn_address","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"numRegistrants","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"account_address","type":"address"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"ssn_address","type":"string"}],"name":"GetSSN","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_to","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Refund","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_owner","type":"address"}],"name":"SetOwner","type":"event"}],
    binary: "60606040526040516020806109b48339905160008054600160a060020a0319163317815560646003556002818155610320600555600882905560c0604052600160808190527f300000000000000000000000000000000000000000000000000000000000000060a05260048054938190527f3000000000000000000000000000000000000000000000000000000000000002815593946100e893601f928116156101000260001901169290920401047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b908101905b8082111561011757600081556001016100d4565b505080600960006101000a815481600160a060020a0302191690830217905550506108998061011b6000396000f35b5090566060604052361561011c5760e060020a600035046312065fe0811461011e57806313381fbf1461012857806313af403514610140578063209652551461016257806324a85aac1461016d5780633fa4f2451461017f5780634d99580514610188578063516f279e1461019b57806355241077146101f9578063705099b91461020457806380edef8e1461022a578063827bfbdf1461023c57806383197ef0146102e85780638da5cb5b14610311578063a2a468bb14610323578063a52bb3ab14610349578063a977c71e146103b3578063b69ef8a8146103d4578063c092e1c3146103dd578063c5a87e0014610494578063ce2ce3fc1461049c578063cebe09c914610506578063d8dd7a6a1461050f578063ec3a6f731461056f575b005b6105785b60005b90565b61057860043560016020526000908152604090205481565b61011c600435600054600160a060020a03908116339091161461061557610671565b610578600854610125565b61058a600654600160a060020a031681565b61057860085481565b61011c6003546002541061067457610002565b6040805160078054602060026001831615610100026000190190921691909104601f81018290048202840182019094528383526105a793908301828280156106c95780601f1061069e576101008083540402835291602001916106c9565b60043560085561011c565b61011c60043560243560008054600160a060020a0390811633909116146106d15761079c565b61058a600954600160a060020a031681565b6040805160206004803580820135601f810184900484028501840190955284845261011c9491936024939092918401919081908401838280828437509496505050505050508060076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107a157805160ff19168380011785555b5061079c9291505b808211156107d157600081556001016102d4565b61011c600054600160a060020a0390811633909116141561069c57600054600160a060020a0316ff5b61058a600054600160a060020a031681565b6006805473ffffffffffffffffffffffffffffffffffffffff191660043517905561011c565b60408051602081810183526000825260048054845160026001831615610100026000190190921691909104601f81018490048402820184019095528481526105a79490928301828280156108005780601f106107d557610100808354040283529160200191610800565b61011c60043560005433600160a060020a0390811691161461080c57610671565b61057860055481565b6040805160206004803580820135601f810184900484028501840190955284845261011c9491936024939092918401919081908401838280828437505060408051602080825289546002600182161561010002600019019091160490820181905296987fd7fe6ebfd4926b70317d3b7760b02ce58a974b662fdda9ad5a7159660f6f45839850969095508594509084019250859150801561083c5780601f106108115761010080835404028352916020019161083c565b61058a610122565b60408051602081810183526000825260078054845160026001831615610100026000190190921691909104601f81018490048402820184019095528481526105a79490928301828280156108005780601f106107d557610100808354040283529160200191610800565b61057860035481565b6105a760048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156106c95780601f1061069e576101008083540402835291602001916106c9565b61057860025481565b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156106075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051600160a060020a038316815290517f167d3e9c1016ab80e58802ca9da10ce5c6a0f4debc46a2e7a2cd9e56899a4fb59181900360200190a16000805473ffffffffffffffffffffffffffffffffffffffff1916821790555b50565b33600160a060020a031660009081526001602081905260409091203490556002805490910190555b565b820191906000526020600020905b8154815290600101906020018083116106ac57829003601f168201915b505050505081565b600160a060020a03831660009081526001602052604090205482141561079c575030600160a060020a0381163182901061079c57604051600160a060020a03841690600090849082818181858883f1505060408051938452602084019190915280517fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d938190039091019150a160006001600050600085600160a060020a03168152602001908152602001600020600050819055506002600081815054809291906001900391905055505b505050565b828001600101855582156102cc579182015b828111156102cc5782518260005055916020019190600101906107b3565b5090565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b50505050509050610125565b600355565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b50509250505060405180910390a18060046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107a157805160ff19168380011785556102cc56",
    unlinked_binary: "60606040526040516020806109b48339905160008054600160a060020a0319163317815560646003556002818155610320600555600882905560c0604052600160808190527f300000000000000000000000000000000000000000000000000000000000000060a05260048054938190527f3000000000000000000000000000000000000000000000000000000000000002815593946100e893601f928116156101000260001901169290920401047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b908101905b8082111561011757600081556001016100d4565b505080600960006101000a815481600160a060020a0302191690830217905550506108998061011b6000396000f35b5090566060604052361561011c5760e060020a600035046312065fe0811461011e57806313381fbf1461012857806313af403514610140578063209652551461016257806324a85aac1461016d5780633fa4f2451461017f5780634d99580514610188578063516f279e1461019b57806355241077146101f9578063705099b91461020457806380edef8e1461022a578063827bfbdf1461023c57806383197ef0146102e85780638da5cb5b14610311578063a2a468bb14610323578063a52bb3ab14610349578063a977c71e146103b3578063b69ef8a8146103d4578063c092e1c3146103dd578063c5a87e0014610494578063ce2ce3fc1461049c578063cebe09c914610506578063d8dd7a6a1461050f578063ec3a6f731461056f575b005b6105785b60005b90565b61057860043560016020526000908152604090205481565b61011c600435600054600160a060020a03908116339091161461061557610671565b610578600854610125565b61058a600654600160a060020a031681565b61057860085481565b61011c6003546002541061067457610002565b6040805160078054602060026001831615610100026000190190921691909104601f81018290048202840182019094528383526105a793908301828280156106c95780601f1061069e576101008083540402835291602001916106c9565b60043560085561011c565b61011c60043560243560008054600160a060020a0390811633909116146106d15761079c565b61058a600954600160a060020a031681565b6040805160206004803580820135601f810184900484028501840190955284845261011c9491936024939092918401919081908401838280828437509496505050505050508060076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107a157805160ff19168380011785555b5061079c9291505b808211156107d157600081556001016102d4565b61011c600054600160a060020a0390811633909116141561069c57600054600160a060020a0316ff5b61058a600054600160a060020a031681565b6006805473ffffffffffffffffffffffffffffffffffffffff191660043517905561011c565b60408051602081810183526000825260048054845160026001831615610100026000190190921691909104601f81018490048402820184019095528481526105a79490928301828280156108005780601f106107d557610100808354040283529160200191610800565b61011c60043560005433600160a060020a0390811691161461080c57610671565b61057860055481565b6040805160206004803580820135601f810184900484028501840190955284845261011c9491936024939092918401919081908401838280828437505060408051602080825289546002600182161561010002600019019091160490820181905296987fd7fe6ebfd4926b70317d3b7760b02ce58a974b662fdda9ad5a7159660f6f45839850969095508594509084019250859150801561083c5780601f106108115761010080835404028352916020019161083c565b61058a610122565b60408051602081810183526000825260078054845160026001831615610100026000190190921691909104601f81018490048402820184019095528481526105a79490928301828280156108005780601f106107d557610100808354040283529160200191610800565b61057860035481565b6105a760048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156106c95780601f1061069e576101008083540402835291602001916106c9565b61057860025481565b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156106075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051600160a060020a038316815290517f167d3e9c1016ab80e58802ca9da10ce5c6a0f4debc46a2e7a2cd9e56899a4fb59181900360200190a16000805473ffffffffffffffffffffffffffffffffffffffff1916821790555b50565b33600160a060020a031660009081526001602081905260409091203490556002805490910190555b565b820191906000526020600020905b8154815290600101906020018083116106ac57829003601f168201915b505050505081565b600160a060020a03831660009081526001602052604090205482141561079c575030600160a060020a0381163182901061079c57604051600160a060020a03841690600090849082818181858883f1505060408051938452602084019190915280517fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d938190039091019150a160006001600050600085600160a060020a03168152602001908152602001600020600050819055506002600081815054809291906001900391905055505b505050565b828001600101855582156102cc579182015b828111156102cc5782518260005055916020019190600101906107b3565b5090565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b50505050509050610125565b600355565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b50509250505060405180910390a18060046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107a157805160ff19168380011785556102cc56",
    address: "0x3f3df9ab610c84606dc8a032f542c5129383e29d",
    generated_with: "2.0.9",
    contract_name: "UserChain"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.UserChain = Contract;
  }

})();
