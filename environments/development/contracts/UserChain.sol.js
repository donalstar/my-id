// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"attribsMap","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner_address","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"attributes","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"first_name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"the_name","outputs":[{"name":"first","type":"string"},{"name":"last","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"location","type":"string"}],"name":"setAttributes","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"last_name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"the_attributes","outputs":[{"name":"ssn","type":"string"},{"name":"dl","type":"string"}],"type":"function"},{"inputs":[{"name":"fname","type":"string"},{"name":"lname","type":"string"},{"name":"new_owner","type":"address"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"},{"indexed":false,"name":"attribute","type":"string"}],"name":"SetAttribute","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"},{"indexed":false,"name":"attribute","type":"string"}],"name":"GetAttribute","type":"event"}],
    binary: "606060408190526000600355600160045561098d3881900390819083398101604052805160805160a05191830192019060018054600160a060020a03191633178155600580548551600083905291926020601f60029284161561010002600019019093169190910482018190047f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0908101939290918801908390106100c757805160ff19168380011785555b506100f79291505b8082111561015057600081556001016100b3565b828001600101855582156100ab579182015b828111156100ab5782518260005055916020019190600101906100d9565b50508160066000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015457805160ff19168380011785555b506101849291506100b3565b5090565b82800160010185558215610144579182015b82811115610144578251826000505591602001919060010190610166565b505060028054600160a060020a03191682178155604080516005805460206001821615610100026000190190911694909404601f8101859004909402820160609081018452928201848152919384938401828280156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b50505091835250506006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156102b65780601f1061028b576101008083540402835291602001916102b6565b820191906000526020600020905b81548152906001019060200180831161029957829003601f168201915b505050505081526020015060076000506000820151816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032357805160ff19168380011785555b506103539291506100b3565b82800160010185558215610317579182015b82811115610317578251826000505591602001919060010190610335565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b257805160ff19168380011785555b506103e29291506100b3565b828001600101855582156103a6579182015b828111156103a65782518260005055916020019190600101906103c4565b50506040805180820190915260018082527f30000000000000000000000000000000000000000000000000000000000000006020928301908152600c80546000829052915160ff19166002908117825590955061047694509181161561010002600019011604601f01047fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7908101906100b3565b5050505050610504806104896000396000f3606060405236156100825760e060020a60003504633290a27d811461008a57806380edef8e146100f557806383197ef0146101075780638da5cb5b1461012f57806393e1ea4114610141578063cc7318f11461019e578063d044a1aa146101fb578063e310bb3614610205578063eecc285a146102ac578063f28a729014610309575b610313610002565b600b60209081526004356000908152604090819020805460026001821615610100026000190190911604601f810184900490930260809081019092526060838152610317939092828280156104c35780601f10610498576101008083540402835291602001916104c3565b610385600254600160a060020a031681565b61031360015433600160a060020a039081169116141561031557600154600160a060020a0316ff5b610385600154600160a060020a031681565b610317600c8054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104c35780601f10610498576101008083540402835291602001916104c3565b61031760058054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104c35780601f10610498576101008083540402835291602001916104c3565b6103986007600882565b60206004803580820135601f8101849004909302608090810160405260608481526103139460249391929184019181908382808284375094965050505050505080600c6000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104cb57805160ff19168380011785555b506104fb9291505b808211156105005760008155600101610298565b61031760068054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104c35780601f10610498576101008083540402835291602001916104c3565b6103986009600a82565b005b565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103775780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600160a060020a03166060908152602090f35b6040606090815282546002600182161561010002600019019091160460a0819052819060809060c090869080156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b5050605f198101825284546002600182161561010002600019019091160480825260209190910190859080156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b505094505050505060405180910390f35b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b505050505081565b82800160010185558215610290579182015b828111156102905782518260005055916020019190600101906104dd565b505050565b509056",
    unlinked_binary: "606060408190526000600355600160045561098d3881900390819083398101604052805160805160a05191830192019060018054600160a060020a03191633178155600580548551600083905291926020601f60029284161561010002600019019093169190910482018190047f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0908101939290918801908390106100c757805160ff19168380011785555b506100f79291505b8082111561015057600081556001016100b3565b828001600101855582156100ab579182015b828111156100ab5782518260005055916020019190600101906100d9565b50508160066000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015457805160ff19168380011785555b506101849291506100b3565b5090565b82800160010185558215610144579182015b82811115610144578251826000505591602001919060010190610166565b505060028054600160a060020a03191682178155604080516005805460206001821615610100026000190190911694909404601f8101859004909402820160609081018452928201848152919384938401828280156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b50505091835250506006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156102b65780601f1061028b576101008083540402835291602001916102b6565b820191906000526020600020905b81548152906001019060200180831161029957829003601f168201915b505050505081526020015060076000506000820151816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032357805160ff19168380011785555b506103539291506100b3565b82800160010185558215610317579182015b82811115610317578251826000505591602001919060010190610335565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b257805160ff19168380011785555b506103e29291506100b3565b828001600101855582156103a6579182015b828111156103a65782518260005055916020019190600101906103c4565b50506040805180820190915260018082527f30000000000000000000000000000000000000000000000000000000000000006020928301908152600c80546000829052915160ff19166002908117825590955061047694509181161561010002600019011604601f01047fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7908101906100b3565b5050505050610504806104896000396000f3606060405236156100825760e060020a60003504633290a27d811461008a57806380edef8e146100f557806383197ef0146101075780638da5cb5b1461012f57806393e1ea4114610141578063cc7318f11461019e578063d044a1aa146101fb578063e310bb3614610205578063eecc285a146102ac578063f28a729014610309575b610313610002565b600b60209081526004356000908152604090819020805460026001821615610100026000190190911604601f810184900490930260809081019092526060838152610317939092828280156104c35780601f10610498576101008083540402835291602001916104c3565b610385600254600160a060020a031681565b61031360015433600160a060020a039081169116141561031557600154600160a060020a0316ff5b610385600154600160a060020a031681565b610317600c8054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104c35780601f10610498576101008083540402835291602001916104c3565b61031760058054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104c35780601f10610498576101008083540402835291602001916104c3565b6103986007600882565b60206004803580820135601f8101849004909302608090810160405260608481526103139460249391929184019181908382808284375094965050505050505080600c6000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104cb57805160ff19168380011785555b506104fb9291505b808211156105005760008155600101610298565b61031760068054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104c35780601f10610498576101008083540402835291602001916104c3565b6103986009600a82565b005b565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103775780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600160a060020a03166060908152602090f35b6040606090815282546002600182161561010002600019019091160460a0819052819060809060c090869080156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b5050605f198101825284546002600182161561010002600019019091160480825260209190910190859080156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b505094505050505060405180910390f35b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b505050505081565b82800160010185558215610290579182015b828111156102905782518260005055916020019190600101906104dd565b505050565b509056",
    address: "0x047a064d5019cad91babd6e80931a8a905d24b1c",
    generated_with: "2.0.9",
    contract_name: "UserChain"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("UserChain error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.UserChain = Contract;
  }

})();
